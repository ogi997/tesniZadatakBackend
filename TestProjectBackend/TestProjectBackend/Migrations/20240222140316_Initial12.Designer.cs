// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestProjectBackend.Data;

#nullable disable

namespace TestProjectBackend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240222140316_Initial12")]
    partial class Initial12
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TestProjectBackend.Models.Entities.Faktura", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Broj")
                        .HasColumnType("int");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("IznosBezPdv")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IznosSaRabatomBezPdv")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Partner")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Pdv")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PostoRabata")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Rabat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Ukupno")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Fakture");
                });

            modelBuilder.Entity("TestProjectBackend.Models.Entities.Korisnik", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Lastname")
                        .IsUnique();

                    b.ToTable("Korisnici");
                });

            modelBuilder.Entity("TestProjectBackend.Models.Entities.StavkaFakture", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Cijena")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("FakturaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("IznosBezPdv")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IznosSaRabatomBezPdv")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Kolicina")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NazivArtikla")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Pdv")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PostoRabata")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Rabat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Rbr")
                        .HasColumnType("int");

                    b.Property<decimal>("Ukupno")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("FakturaId");

                    b.ToTable("StavkaFakture");
                });

            modelBuilder.Entity("TestProjectBackend.Models.Entities.StavkaFakture", b =>
                {
                    b.HasOne("TestProjectBackend.Models.Entities.Faktura", null)
                        .WithMany("StavkeFakture")
                        .HasForeignKey("FakturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TestProjectBackend.Models.Entities.Faktura", b =>
                {
                    b.Navigation("StavkeFakture");
                });
#pragma warning restore 612, 618
        }
    }
}
